<%- include("../../views/partials/user/header") %>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/product-details.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        .action-btn.in-wishlist {
    color: #ff6b6b;
}

.action-btn.in-wishlist i {
    color: #ff6b6b;
}

.action-btn i.fas {
    color: #ff6b6b;
}
    </style>
</head>
<main class="main">
    <div class="breadcrumb-container">
        <div class="container">
            <div class="breadcrumb">
                <span> <a href="/">home</a></span> 
                <span> <a href="/shop">shop</a></span> 
                <span><%= product.productName%></span> 
            </div>
        </div>
    </div>
    
    <section class="product-showcase">
        <div class="container">
            <div class="product-container">
                <div class="product-gallery-section">
                    <div class="gallery-layout">
                        <div class="slider-nav-thumbnails">
                            <% for(let i = product.productImage.length - 1; i >= 0; i--) { %>
                                <img src="<%= product.productImage[i] %>" alt="Thumbnail <%= product.productImage.length - i %>" data-index="<%= i %>" class="<%= i === product.productImage.length - 1 ? 'active' : '' %>">
                            <% } %>
                        </div>
                        <div class="product-image-slider">
                            <% for(let i = product.productImage.length - 1; i >= 0; i--) { %>
                                <figure class="border-radius-10 <%= i === product.productImage.length - 1 ? 'active' : '' %>">
                                    <img src="<%= product.productImage[i] %>" alt="Main Image <%= product.productImage.length - i %>">
                                </figure>
                            <% } %>
                        </div>
                    </div>
                    <div class="product-meta-info">
                        <ul class="product-meta">
                            <li><span class="meta-label">Stock Code:</span> <a href="#">FWM15VKT</a></li>
                            <li><span class="meta-label">Tags:</span> <a href="#">Clothing</a> <a href="#">Fashion</a> <a href="#">Summer</a></li>
                            <li><span class="meta-label">Availability:</span> <span id="availability-status" class="in-stock">Select a size to check availability</span></li>
                        </ul>
                    </div>
                </div>
                
                <div class="product-info-section">
                    <div class="product-header">
                        <h2><%= product.productName %></h2>
                        <div class="product-detail-rating">
                            <div class="product-rate">
                                <div class="product-rating" style="width:90%"></div>
                            </div>
                            <span class="text-muted">(25 reviews)</span>
                        </div>
                    </div>
                    
                    <div class="price-section">
                        <div class="product-price">
                            <ins><span>₹<%= product.salePrice %></span></ins>
                            <ins><span class="old-price">₹<%= product.regularPrice %></span></ins>
                            <span class="save-price">
                                <%= Math.round(((product.regularPrice - product.salePrice) / product.regularPrice) * 100) %>% Off
                            </span>
                        </div>
                    </div>
                    
                    <div class="product-description">
                        <p><%= product.description %></p>
                    </div>
                    
                    <div class="category-info">
                        <label>Category:</label>
                        <span><a href="#"><%= product.category.name %></a></span>
                    </div>
                    
                    <div class="size-selector">
                        <label>Size:</label>
                        <div class="size-options">
                            <% const availableSizes = ['S', 'M', 'L', 'XL', 'XXL']; %>
                            <% availableSizes.forEach(sizeKey => { %>
                                <% const sizeQty = product.sizes.find(s => s.size === sizeKey)?.quantity || 0; %>
                                <button class="size-btn <%= sizeQty > 0 ? 'available' : 'unavailable' %>" 
                                        data-size="<%= sizeKey %>" 
                                        <%= sizeQty === 0 ? 'disabled' : '' %>>
                                    <%= sizeKey %> <%= sizeQty > 0 ? `(${sizeQty})` : '(Out)' %>
                                </button>
                            <% }); %>
                        </div>
                    </div>
                    <div class="product-benefits">
                        <ul>
                            <li><i class="fas fa-crown"></i> 1 Year Brand Warranty</li>
                            <li><i class="fas fa-sync-alt"></i> 30 Day Return Policy</li>
                            <li><i class="fas fa-credit-card"></i> Cash on Delivery available</li>
                        </ul>
                    </div>
                    
                    <div class="purchase-options">
                        <div class="quantity-selector">
                            <span class="quantity-label">Quantity:</span>
                            <div class="detail-qty">
                                <a href="#" class="qty-down"><i class="fas fa-angle-down"></i></a>
                                <span class="qty-val" id="quantity">1</span>
                                <a href="#" class="qty-up"><i class="fas fa-angle-up"></i></a>
                            </div>
                        </div>
                        
                        <div class="action-buttons">
                            <button class="button-add-to-cart" id="add-to-cart-btn">Add To Cart</button>
                            <button class="action-btn <%= isInWishlist ? 'in-wishlist' : '' %>" id="add-to-wishlist-btn" aria-label="Add To Wishlist">
                                <i class="<%= isInWishlist ? 'fas' : 'far' %> fa-heart"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="popular-products">
        <div class="container">
            <div class="section-title">
                <h3>Customers Also Bought</h3>
                <p>Other products you might like from this category</p>
            </div>
            
            <div class="product-carousel">
                <% if (recommendedProducts && recommendedProducts.length > 0) { %>
                    <% recommendedProducts.forEach(product => { %>
                        <div class="product-card">
                            <div class="product-img">
                                <a href="/product/<%= product._id %>">
                                    <img src="<%= product.productImage[0] || '/images/default-product.jpg' %>" alt="<%= product.productName %>">
                                </a>
                                <% if (product.salePrice < product.regularPrice) { %>
                                    <div class="product-badges">
                                        <span class="badge-discount">
                                            <%= Math.round(((product.regularPrice - product.salePrice) / product.regularPrice) * 100) %>% OFF
                                        </span>
                                    </div>
                                <% } %>
                            </div>
                            <div class="product-info">
                                <h5><a href="/product/<%= product._id %>"><%= product.productName %></a></h5>
                                <div class="product-rate-wrap">
                                    <div class="product-rate">
                                        <div class="product-rating" style="width:'<%= Math.floor(Math.random() * 30) + 70 %>%'"></div>
                                    </div>
                                    <span class="product-reviews">(<%= Math.floor(Math.random() * 50) %>)</span>
                                </div>
                                <div class="product-price">
                                    <span>₹<%= product.salePrice %></span>
                                    <% if (product.salePrice < product.regularPrice) { %>
                                        <span class="old-price">₹<%= product.regularPrice %></span>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p>No recommended products found at this time</p>
                <% } %>
            </div>
        </div>
    </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const thumbnails = document.querySelectorAll('.slider-nav-thumbnails img');
        const mainImages = document.querySelectorAll('.product-image-slider figure');
        const mainImageSlider = document.querySelector('.product-image-slider');
        const sizeButtons = document.querySelectorAll('.size-btn');
        const qtyDown = document.querySelector('.qty-down');
        const qtyUp = document.querySelector('.qty-up');
        const qtyVal = document.querySelector('.qty-val');
        const addToCartBtn = document.querySelector('#add-to-cart-btn');
        const addToWishlistBtn = document.querySelector('#add-to-wishlist-btn');
        let selectedSize = null;
    
        // Thumbnail click handler
        thumbnails.forEach((thumbnail, index) => {
            thumbnail.addEventListener('click', () => {
                thumbnails.forEach(thumb => thumb.classList.remove('active'));
                mainImages.forEach(img => img.classList.remove('active'));
                thumbnail.classList.add('active');
                mainImages[index].classList.add('active');
            });
        });
    
        // Size selection
        sizeButtons.forEach(button => {
            button.addEventListener('click', () => {
                if (!button.classList.contains('unavailable')) {
                    sizeButtons.forEach(btn => btn.classList.remove('selected'));
                    button.classList.add('selected');
                    selectedSize = button.dataset.size;
                    
                    const quantityMatch = button.textContent.match(/\((\d+)\)/);
                    const quantity = quantityMatch ? parseInt(quantityMatch[1]) : 0;
                    
                    const availabilityStatus = document.getElementById('availability-status');
                    if (quantity > 0) {
                        availabilityStatus.textContent = `${quantity} items available in size ${selectedSize}`;
                        availabilityStatus.className = 'in-stock';
                    } else {
                        availabilityStatus.textContent = `Size ${selectedSize} is out of stock`;
                        availabilityStatus.className = 'out-stock';
                    }
                }
            });
        });
    
        // Quantity controls
        qtyDown.addEventListener('click', (e) => {
            e.preventDefault();
            let qty = parseInt(qtyVal.textContent);
            if (qty > 1) qtyVal.textContent = qty - 1;
        });
    
        qtyUp.addEventListener('click', (e) => {
            e.preventDefault();
            let qty = parseInt(qtyVal.textContent);
            const maxQty = selectedSize ? parseInt(document.querySelector(`.size-btn[data-size="${selectedSize}"]`).textContent.match(/\d+/)[0]) : Infinity;
            if (qty < maxQty) qtyVal.textContent = qty + 1;
        });
    
        // Image zoom
        mainImageSlider.addEventListener('mousemove', (e) => {
            const activeImage = mainImageSlider.querySelector('figure.active img');
            if (!activeImage) return;
            const rect = mainImageSlider.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            const xPercent = (x / rect.width) * 100;
            const yPercent = (y / rect.height) * 100;
            activeImage.style.transform = 'scale(2)';
            activeImage.style.transformOrigin = `${xPercent}% ${yPercent}%`;
        });
    
        mainImageSlider.addEventListener('mouseleave', () => {
            const activeImage = mainImageSlider.querySelector('figure.active img');
            if (activeImage) {
                activeImage.style.transform = 'scale(1)';
                activeImage.style.transformOrigin = 'center center';
            }
        });
    
        addToCartBtn.addEventListener('click', async (e) => {
            e.preventDefault();
            if (!selectedSize) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Size Required',
                    text: 'Please select a size before adding to cart',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            const quantity = parseInt(qtyVal.textContent);
            const productId = '<%= product._id %>';
            console.log("productId",productId)

            try {
                const checkResponse = await fetch(`/product-status/${productId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });
                const checkResult = await checkResponse.json();
               

                if (!checkResult.isListed) {
                    addToCartBtn.disabled = true;
                    addToCartBtn.textContent = 'Not Available';
                    Swal.fire({
                        icon: 'error',
                        title: 'Product Unavailable',
                        text: 'This product is no longer available for purchase.',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#3085d6',
                    });
                    window.location.reload()
                    return;
                }

                if (checkResult.isBlocked) {
                    addToCartBtn.disabled = true;
                    addToCartBtn.textContent = 'Blocked';
                    Swal.fire({
                        icon: 'error',
                        title: 'Product Blocked',
                        text: 'This product is currently blocked and cannot be purchased.',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#3085d6',
                    });
                    window.location.reload()
                    return;
                }
            } catch (error) {
                console.error('Error checking product status:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to verify product status. Please try again.',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#3085d6',
                });
                return;
            }

            try {
                const response = await fetch('/add-to-cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId,
                        size: selectedSize,
                        quantity,
                    }),
                });

                const result = await response.json();

                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart',
                        text: `Added ${quantity} item(s) of size ${selectedSize} to your cart`,
                        showConfirmButton: false,
                        timer: 1500,
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message,
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#3085d6',
                    });
                    if (result.redirect) {
                        setTimeout(() => window.location.href = result.redirect, 1500);
                    }
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Server Error',
                    text: 'Failed to add product to cart. Please try again.',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#3085d6',
                });
                console.error('Error:', error);
            }
        });
    
const heartIcon = addToWishlistBtn.querySelector('i');
let isInWishlist = `<%= isInWishlist %>` ===true;
console.log("wishilst",isInWishlist)

// Update button appearance based on initial state
updateWishlistButton();

addToWishlistBtn.addEventListener('click', async (e) => {
    e.preventDefault();
    const productId = '<%= product._id %>';

    try {
        const endpoint = isInWishlist ? '/remove-from-wishlist' : '/add-to-wishlist';
        const response = await fetch(endpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
            credentials: 'include' // Important for session cookies
        });

        if (!response.ok) throw new Error('Network response was not ok');

        const result = await response.json();

        if (result.success) {
            // Toggle the state
            isInWishlist = !isInWishlist;
            updateWishlistButton();
            
            Swal.fire({
                icon: 'success',
                title: isInWishlist ? 'Added to Wishlist' : 'Removed from Wishlist',
                text: isInWishlist ? 'Product has been added to your wishlist!' : 'Product has been removed from your wishlist.',
                showConfirmButton: false,
                timer: 1500,
            });
        } else {
            throw new Error(result.message || 'Operation failed');
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to update wishlist. Please try again.',
            confirmButtonText: 'OK',
            confirmButtonColor: '#3085d6',
        });
        console.error('Error updating wishlist:', error);
    }
});

function updateWishlistButton() {
    if (isInWishlist) {
        addToWishlistBtn.classList.add('in-wishlist');
        heartIcon.classList.remove('far');
        heartIcon.classList.add('fas');
    } else {
        addToWishlistBtn.classList.remove('in-wishlist');
        heartIcon.classList.remove('fas');
        heartIcon.classList.add('far');
    }
}
    });

   
    
    document.addEventListener('DOMContentLoaded', function() {
        const productCards = document.querySelectorAll('.product-card');
        productCards.forEach(card => {
            card.addEventListener('mouseenter', () => {
                card.style.transform = 'translateY(-5px)';
                card.style.boxShadow = '0 5px 20px rgba(0,0,0,0.1)';
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'translateY(0)';
                card.style.boxShadow = '0 2px 10px rgba(0,0,0,0.05)';
            });
        });
    });
</script>
<%- include("../../views/partials/user/footer") %>