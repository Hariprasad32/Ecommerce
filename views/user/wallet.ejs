
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Wallet</title>
    <style>
        /* * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        } */
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
        }
        
        /* .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        } */
        
        .wallet-section {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-bottom: 30px;
            width:100%;
            height: 100%;
        }
        
        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eaedf0;
        }
        
        .section-title {
            font-size: 24px;
            font-weight: 600;
            color: #2b3441;
        }
        
        .balance-card {
            background: linear-gradient(135deg, #3a7bd5, #3a6073);
            border-radius: 12px;
            padding: 25px;
            color: white;
            margin-bottom: 25px;
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 20px rgba(58, 123, 213, 0.25);
        }
        
        .balance-card::before {
            content: '';
            position: absolute;
            top: -20px;
            right: -20px;
            background-color: rgba(255, 255, 255, 0.1);
            width: 150px;
            height: 150px;
            border-radius: 50%;
        }
        
        .balance-label {
            font-size: 16px;
            opacity: 0.9;
            margin-bottom: 8px;
        }
        
        .balance-amount {
            font-size: 36px;
            font-weight: 700;
            margin-bottom: 15px;
        }
        
        .actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }
        
        .action-btn {
            background-color: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s;
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .action-btn:hover {
            background-color: rgba(255, 255, 255, 0.3);
        }
        
        .transaction-list {
            list-style: none;
        }
        
        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 0;
            border-bottom: 1px solid #eff2f5;
        }
        
        .transaction-item:last-child {
            border-bottom: none;
        }
        
        .transaction-details {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .transaction-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f0f4f9;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #5086db;
            font-size: 18px;
        }
        
        .transaction-info {
            display: flex;
            flex-direction: column;
        }
        
        .transaction-name {
            font-weight: 600;
            color: #2b3441;
        }
        
        .transaction-date {
            font-size: 14px;
            color: #8896a6;
        }
        
        .transaction-amount {
            font-weight: 600;
        }
        
        .income {
            color: #4caf50;
        }
        
        .expense {
            color: #f44336;
        }
        
        .tab-container {
            margin-bottom: 20px;
        }
        
        .tabs {
            display: flex;
            gap: 5px;
            border-bottom: 1px solid #eaedf0;
        }
        
        .tab {
            padding: 12px 20px;
            cursor: pointer;
            font-weight: 500;
            color: #8896a6;
            position: relative;
        }
        
        .tab.active {
            color: #3a7bd5;
        }
        
        .tab.active::after {
            content: '';
            position: absolute;
            bottom: -1px;
            left: 0;
            right: 0;
            height: 3px;
            background-color: #3a7bd5;
            border-top-left-radius: 3px;
            border-top-right-radius: 3px;
        }
        
        .tab-content {
            display: none;
            padding: 20px 0;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .payment-methods {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .payment-method {
            background-color: #f9fafc;
            border-radius: 10px;
            padding: 15px;
            border: 1px solid #eaedf0;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .payment-method:hover {
            border-color: #3a7bd5;
            transform: translateY(-2px);
        }
        
        .payment-method.active {
            border-color: #3a7bd5;
            background-color: rgba(58, 123, 213, 0.05);
        }
        
        .method-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .method-name {
            font-weight: 600;
        }
        
        .method-icon {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            background-color: white;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        }
        
        .method-details {
            margin-top: 15px;
            font-size: 14px;
            color: #8896a6;
        }
        
        .add-method {
            border: 1px dashed #c0cad8;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
            min-height: 120px;
            color: #8896a6;
        }
        
        .add-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f0f4f9;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            font-size: 20px;
        }
        
        .activity-chart {
            height: 200px;
            margin: 20px 0;
        }
        
        .chart-placeholder {
            background-color: #f9fafc;
            border-radius: 10px;
            border: 1px solid #eaedf0;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            overflow: hidden;
        }
        
        .chart-bar {
            position: absolute;
            bottom: 0;
            width: 8%;
            background-color: #3a7bd5;
            border-radius: 4px 4px 0 0;
            transition: height 0.5s;
        }
        
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 100;
        }
        
        .modal {
            background-color: white;
            border-radius: 12px;
            width: 90%;
            max-width: 500px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eaedf0;
        }
        
        .modal-title {
            font-size: 20px;
            font-weight: 600;
        }
        
        .close-modal {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #8896a6;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        .form-input {
            width: 100%;
            padding: 12px;
            border: 1px solid #c0cad8;
            border-radius: 6px;
            font-size: 16px;
        }
        
        .form-input:focus {
            outline: none;
            border-color: #3a7bd5;
        }
        
        .submit-btn {
            background-color: #3a7bd5;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
            transition: background-color 0.2s;
        }
        
        .submit-btn:hover {
            background-color: #2a6ac0;
        }
        
        @media (max-width: 768px) {
            .payment-methods {
                grid-template-columns: 1fr 1fr;
            }
            
            .actions {
                flex-wrap: wrap;
            }
            
            .action-btn {
                flex: 1;
                min-width: 120px;
            }
        }
        
        @media (max-width: 480px) {
            .payment-methods {
                grid-template-columns: 1fr;
            }
            
            .section-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            
            .balance-amount {
                font-size: 28px;
            }
        }
    </style>
</head>

    <div class="mainsection">
    <%- include("../../views/partials/user/profile/profile") %>
        <div class="container">
            <div class="wallet-section">
                <div class="section-header">
                    <h2 class="section-title">My Wallet</h2>
                </div>
               
                
                <div class="balance-card">
                    <div class="balance-label">Total Balance</div>
                    <div class="balance-amount" id="totalBalance">
                        ₹<%= user.wallet.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,') %>
                    </div>
                    <div class="actions">
                        <button class="action-btn" id="withdrawBtn">- Withdraw</button>
                        <button class="action-btn" id="transferBtn">↑ Transfer</button>
                    </div>
                </div>
                
                <div class="tab-container">
                    <div class="tabs">
                        <div class="tab active" data-tab="transactions">Transactions</div>
                        <div class="tab" data-tab="payment-methods">Payment Methods</div>
                        <div class="tab" data-tab="activity">Activity</div>
                    </div>
                    
                    <div class="tab-content active" id="transactions">
                        <ul class="transaction-list" id="transactionList">
                            <% if (user.walletTransactions && user.walletTransactions.length > 0) { %>
                                <% user.walletTransactions.reverse().forEach(tx => { %>
                                    <li class="transaction-item">
                                        <div class="transaction-details">
                                            <div class="transaction-icon"><%= tx.type === 'credit' ? '↓' : '↑' %></div>
                                            <div class="transaction-info">
                                                <div class="transaction-name"><%= tx.description || (tx.type === 'credit' ? 'Refund' : 'Withdrawal') %></div>
                                                <div class="transaction-date"><%= tx.date.toLocaleDateString() %></div>
                                            </div>
                                        </div>
                                        <div class="transaction-amount <%= tx.type === 'credit' ? 'income' : 'expense' %>">
                                            <%= tx.type === 'credit' ? '+' : '-' %>₹<%= tx.amount.toFixed(2) %>
                                        </div>
                                    </li>
                                <% }) %>
                            <% } else { %>
                                <li>No transactions yet.</li>
                            <% } %>
                        </ul>
                    </div>
                    <!-- Payment Methods and Activity tabs unchanged -->
                </div>
            </div>
        </div>
    
</div>
    <script>
        // Tab switching
        document.querySelectorAll('.tab').forEach(tab => {
            tab.addEventListener('click', () => {
                // Remove active class from all tabs and contents
                document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                
                // Add active class to clicked tab
                tab.classList.add('active');
                
                // Show corresponding content
                const tabId = tab.getAttribute('data-tab');
                document.getElementById(tabId).classList.add('active');
            });
        });
        
        // Payment method selection
        document.querySelectorAll('.payment-method:not(.add-method)').forEach(method => {
            method.addEventListener('click', () => {
                document.querySelectorAll('.payment-method').forEach(m => m.classList.remove('active'));
                method.classList.add('active');
            });
        });
        
        // Modal handling
        const overlay = document.querySelector('.overlay');
        const closeModal = document.querySelector('.close-modal');
        
        document.getElementById('depositBtn').addEventListener('click', () => {
            overlay.style.display = 'flex';
        });
        
        closeModal.addEventListener('click', () => {
            overlay.style.display = 'none';
        });
        
        overlay.addEventListener('click', (e) => {
            if (e.target === overlay) {
                overlay.style.display = 'none';
            }
        });
        
        // Form submission
        document.getElementById('depositForm').addEventListener('submit', (e) => {
            e.preventDefault();
            
            // In a real application, you would handle the deposit here
            // For demo purposes, let's update the balance
            const currentBalance = parseFloat(document.getElementById('totalBalance').textContent.replace('$', '').replace(',', ''));
            const newBalance = (currentBalance + 500).toFixed(2);
            document.getElementById('totalBalance').textContent = '$' + new Intl.NumberFormat().format(newBalance);
            
            // Add a new transaction to the list
            const transactionList = document.querySelector('.transaction-list');
            const newTransaction = document.createElement('li');
            newTransaction.className = 'transaction-item';
            newTransaction.innerHTML = `
                <div class="transaction-details">
                    <div class="transaction-icon">↓</div>
                    <div class="transaction-info">
                        <div class="transaction-name">Deposit</div>
                        <div class="transaction-date">April 4, 2025</div>
                    </div>
                </div>
                <div class="transaction-amount income">+$500.00</div>
            `;
            transactionList.insertBefore(newTransaction, transactionList.firstChild);
            
            // Close modal
            overlay.style.display = 'none';
        });
        
        // Add Payment Method button
        document.getElementById('addPaymentMethod').addEventListener('click', () => {
            alert('Add Payment Method functionality would go here!');
        });
        
        // Initialize activity chart with random data
        document.querySelectorAll('.chart-bar').forEach(bar => {
            const randomHeight = Math.floor(Math.random() * 100);
            bar.style.height = `${randomHeight}%`;
        });
    </script>
<%- include("../../views/partials/user/footer") %>
